version: "3.9"

x-wslg-env: &wslg-env
  # ── GUI vía WSLg ──────────────────────────────────────────────────────────────
  DISPLAY: ":0"
  WAYLAND_DISPLAY: "wayland-0"
  XDG_RUNTIME_DIR: "/mnt/wslg/runtime-dir"
  PULSE_SERVER: "/mnt/wslg/PulseServer"
  QT_X11_NO_MITSHM: 1
  # ── ROS / Gazebo ──────────────────────────────────────────────────────────────
  ROS_DOMAIN_ID: 30
  TURTLEBOT3_MODEL: burger
  GAZEBO_MODEL_PATH: "/opt/ros/humble/share/turtlebot3_gazebo/models:/usr/share/gazebo-11/models"

services:
  tb3_sim:
    build: .
    container_name: tb3_sim
    environment: *wslg-env
    networks: [ros_net]
    ports:                # ← añade esto
      - "9090:9090"       # host:container
    volumes:
      - ./maps:/root/maps
      - /run/desktop/mnt/host/wslg/.X11-unix:/tmp/.X11-unix
      - /run/desktop/mnt/host/wslg:/mnt/wslg
    working_dir: /root/maps
    command: >
      bash -c "
        source /opt/ros/humble/setup.bash &&
        # Gazebo en background
        ros2 launch turtlebot3_gazebo turtlebot3_world.launch.py &

        sleep 15 &&

        ros2 launch rosbridge_server rosbridge_websocket_launch.xml &

        # SLAM async en /root/maps
        ros2 launch slam_toolbox online_async_launch.py \
          --ros-args -p use_sim_time:=true &
       
      "

  rviz:
    build: .
    container_name: rviz_tb3
    depends_on:
      - tb3_sim
    environment: *wslg-env
    networks: [ros_net]
    volumes:
      - /run/desktop/mnt/host/wslg/.X11-unix:/tmp/.X11-unix
      - /run/desktop/mnt/host/wslg:/mnt/wslg

    command: >
      bash -c "source /opt/ros/humble/setup.bash &&
               rviz2 -d /opt/ros/humble/share/turtlebot3_description/rviz/model.rviz"
networks:
  ros_net:
    name: ros_net
    external: true
